buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "com.heroku.sdk.heroku-gradle" version "2.0.0"
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'java'
//apply plugin: 'com.heroku.sdk.heroku-gradle'


group 'com.jkv.journal'
version '1.0.0'
mainClassName = "com.jkv.journal.ApplicationKt"//"io.ktor.server.netty.EngineMain"

sourceSets.main.java.srcDirs = ['src']

//Procfile
//web: java -jar build/libs/journal-1.0.0.jar
//web: java -Dserver.port=$PORT $JAVA_OPTS -jar build/libs/journal-1.0.0.jar

//sourceSets {
//    main.kotlin.srcDirs = main.java.srcDirs = ['src']
//    test.kotlin.srcDirs = test.java.srcDirs = ['test']
//    main.resources.srcDirs = ['resources']
//    test.resources.srcDirs = ['testresources']
//}

//jar {
//    manifest {
//        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
//    }
//
//    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
//
//    from {
//        (configurations.compile).collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }
//}

jar {
    manifest {
        attributes 'Main-Class': 'com.jkv.journal.ApplicationKt'
    }

    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task stage(dependsOn: ['build', 'clean', 'jar']) {
    build.mustRunAfter clean
    jar.mustRunAfter clean
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-freemarker:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}
